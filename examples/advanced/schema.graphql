# Schema generated by Grats (https://grats.capt.dev)
# Do not manually edit. Regenerate by running `npx grats`.
"""Indicates a stable refetchable object in the system."""
interface Node {
  """
  A globally unique opaque identifier for a node. Can be used to fetch the the
  node with the `node` or `nodes` fields.
  
  See: https://graphql.org/learn/global-object-identification/
  """
  id: ID
}

input CreatePostInput {
  authorId: ID!
  content: String!
  title: String!
}

type Mutation {
  """Create a new post."""
  createPost(input: CreatePostInput!): Post
}

"""A blog post."""
type Post implements Node {
  """The author of the post. This cannot change after the post is created."""
  author: User
  """Content of the post in markdown."""
  content: String
  """
  A globally unique opaque identifier for a node. Can be used to fetch the the
  node with the `node` or `nodes` fields.
  
  See: https://graphql.org/learn/global-object-identification/
  """
  id: ID
  """The editor-approved title of the post."""
  title: String
}

type Query {
  """Fetch a single `Node` by its globally unique ID."""
  node(id: ID!): Node
  """Fetch a list of `Node`s by their globally unique IDs."""
  nodes(ids: [ID!]!): [Node]
  """All posts in the system. Note that there is no guarantee of order."""
  posts: [Post!]
  """All users in the system. Note that there is no guarantee of order."""
  users: [User!]
}

type User implements Node {
  """
  A globally unique opaque identifier for a node. Can be used to fetch the the
  node with the `node` or `nodes` fields.
  
  See: https://graphql.org/learn/global-object-identification/
  """
  id: ID
  """User's name. **Note:** This field is not guaranteed to be unique."""
  name: String
  """
  All posts written by this user. Note that there is no guarantee of order.
  """
  posts: [Post!]
}
